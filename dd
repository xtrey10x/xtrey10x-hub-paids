local GUI = {};

-- Xtrey10x
GUI["1"] = Instance.new("ScreenGui", game:GetService("CoreGui") or game:GetService("StarterGui"));
GUI["1"]["Name"] = [[Xtrey10x]];
GUI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

-- Xtrey10x.Shadow
GUI["2"] = Instance.new("ImageLabel", GUI["1"]);
GUI["2"]["ZIndex"] = 0;
GUI["2"]["BorderSizePixel"] = 0;
GUI["2"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
GUI["2"]["ScaleType"] = Enum.ScaleType.Slice;
GUI["2"]["ImageColor3"] = Color3.fromRGB(255, 0, 0);
GUI["2"]["ImageTransparency"] = 0.10000000149011612;
GUI["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
GUI["2"]["Image"] = [[rbxassetid://6015897843]];
GUI["2"]["Size"] = UDim2.new(0, 607, 0, 360);
GUI["2"]["Name"] = [[Shadow]];
GUI["2"]["BackgroundTransparency"] = 1;
GUI["2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- Xtrey10x.Shadow.Main
GUI["3"] = Instance.new("Frame", GUI["2"]);
GUI["3"]["BorderSizePixel"] = 0;
GUI["3"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
GUI["3"]["Size"] = UDim2.new(0, 562, 0, 315);
GUI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["3"]["Position"] = UDim2.new(0.03636040538549423, 0, 0.06048090010881424, 0);
GUI["3"]["Name"] = [[Main]];

-- Xtrey10x.Shadow.Main.UICorner
GUI["4"] = Instance.new("UICorner", GUI["3"]);
GUI["4"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Shadow.Main.ButtonTabs
GUI["5"] = Instance.new("Frame", GUI["3"]);
GUI["5"]["BorderSizePixel"] = 0;
GUI["5"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
GUI["5"]["Size"] = UDim2.new(0.2793594300746918, 0, 0.8888888955116272, 0);
GUI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["5"]["Position"] = UDim2.new(0.010676156729459763, 0, 0.08888889104127884, 0);
GUI["5"]["Name"] = [[ButtonTabs]];

-- Xtrey10x.Shadow.Main.ButtonTabs.UIGradient
GUI["6"] = Instance.new("UIGradient", GUI["5"]);
GUI["6"]["Rotation"] = 70;
GUI["6"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Shadow.Main.ButtonTabs.DropShadowHolder
GUI["7"] = Instance.new("Frame", GUI["5"]);
GUI["7"]["ZIndex"] = 0;
GUI["7"]["BorderSizePixel"] = 0;
GUI["7"]["BackgroundTransparency"] = 1;
GUI["7"]["Size"] = UDim2.new(1, 0, 1, 0);
GUI["7"]["Name"] = [[DropShadowHolder]];

-- Xtrey10x.Shadow.Main.ButtonTabs.DropShadowHolder.DropShadow
GUI["8"] = Instance.new("ImageLabel", GUI["7"]);
GUI["8"]["ZIndex"] = 0;
GUI["8"]["BorderSizePixel"] = 0;
GUI["8"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
GUI["8"]["ScaleType"] = Enum.ScaleType.Slice;
GUI["8"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
GUI["8"]["ImageTransparency"] = 0.5;
GUI["8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
GUI["8"]["Image"] = [[rbxassetid://6015897843]];
GUI["8"]["Size"] = UDim2.new(1, 47, 1, 47);
GUI["8"]["Name"] = [[DropShadow]];
GUI["8"]["BackgroundTransparency"] = 1;
GUI["8"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- Xtrey10x.Shadow.Main.ButtonTabs.ScrollingFrame
GUI["9"] = Instance.new("ScrollingFrame", GUI["5"]);
GUI["9"]["Active"] = true;
GUI["9"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
GUI["9"]["BorderSizePixel"] = 0;
GUI["9"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
GUI["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["9"]["VerticalScrollBarInset"] = Enum.ScrollBarInset.Always;
GUI["9"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
GUI["9"]["BackgroundTransparency"] = 1;
GUI["9"]["Size"] = UDim2.new(0, 157, 0, 272);
GUI["9"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
GUI["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["9"]["ScrollBarThickness"] = 0;
GUI["9"]["Position"] = UDim2.new(0, 0, 0, 2);

-- Xtrey10x.Shadow.Main.ButtonTabs.ScrollingFrame.UIListLayout
GUI["a"] = Instance.new("UIListLayout", GUI["9"]);
GUI["a"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
GUI["a"]["Padding"] = UDim.new(0, 3);
GUI["a"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Shadow.Main.Tabs
GUI["b"] = Instance.new("Frame", GUI["3"]);
GUI["b"]["BorderSizePixel"] = 0;
GUI["b"]["BackgroundColor3"] = Color3.fromRGB(50, 50, 50);
GUI["b"]["Size"] = UDim2.new(0.6886121034622192, 0, 0.8920634984970093, 0);
GUI["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["b"]["Position"] = UDim2.new(0.3007117509841919, 0, 0.08571428805589676, 0);
GUI["b"]["Name"] = [[Tabs]];

-- Xtrey10x.Shadow.Main.Tabs.UIGradient
GUI["c"] = Instance.new("UIGradient", GUI["b"]);
GUI["c"]["Rotation"] = 70;
GUI["c"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Shadow.Main.Tabs.DropShadowHolder
GUI["d"] = Instance.new("Frame", GUI["b"]);
GUI["d"]["ZIndex"] = 0;
GUI["d"]["BorderSizePixel"] = 0;
GUI["d"]["BackgroundTransparency"] = 1;
GUI["d"]["Size"] = UDim2.new(1, 0, 1, 0);
GUI["d"]["Name"] = [[DropShadowHolder]];

-- Xtrey10x.Shadow.Main.Tabs.DropShadowHolder.DropShadow
GUI["e"] = Instance.new("ImageLabel", GUI["d"]);
GUI["e"]["ZIndex"] = 0;
GUI["e"]["BorderSizePixel"] = 0;
GUI["e"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
GUI["e"]["ScaleType"] = Enum.ScaleType.Slice;
GUI["e"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
GUI["e"]["ImageTransparency"] = 0.5;
GUI["e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
GUI["e"]["Image"] = [[rbxassetid://6015897843]];
GUI["e"]["Size"] = UDim2.new(1, 47, 1, 47);
GUI["e"]["Name"] = [[DropShadow]];
GUI["e"]["BackgroundTransparency"] = 1;
GUI["e"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- Xtrey10x.Shadow.Main.Tabs.DropShadowHolder.UICorner
GUI["f"] = Instance.new("UICorner", GUI["d"]);
GUI["f"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Shadow.Main.Tabs.UICorner
GUI["10"] = Instance.new("UICorner", GUI["b"]);
GUI["10"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Shadow.Main.Tabs.SelectedTab
GUI["11"] = Instance.new("TextLabel", GUI["b"]);
GUI["11"]["TextWrapped"] = true;
GUI["11"]["BorderSizePixel"] = 0;
GUI["11"]["TextScaled"] = true;
GUI["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["11"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["11"]["TextSize"] = 14;
GUI["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["11"]["Size"] = UDim2.new(0.5271317958831787, 0, 0.06761565804481506, 0);
GUI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["11"]["Text"] = [[Tab 1]];
GUI["11"]["Name"] = [[SelectedTab]];
GUI["11"]["BackgroundTransparency"] = 1;
GUI["11"]["Position"] = UDim2.new(0.0258397925645113, 0, 0.010676156729459763, 0);

-- Xtrey10x.Shadow.Main.UIGradient
GUI["12"] = Instance.new("UIGradient", GUI["3"]);
GUI["12"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(142, 142, 142))};

-- Xtrey10x.Shadow.Main.UIStroke
GUI["13"] = Instance.new("UIStroke", GUI["3"]);
GUI["13"]["Color"] = Color3.fromRGB(255, 0, 0);

-- Xtrey10x.Shadow.Main.Title
GUI["14"] = Instance.new("TextLabel", GUI["3"]);
GUI["14"]["TextWrapped"] = true;
GUI["14"]["BorderSizePixel"] = 0;
GUI["14"]["TextScaled"] = true;
GUI["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["14"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["14"]["TextSize"] = 14;
GUI["14"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
GUI["14"]["Size"] = UDim2.new(0.8843416571617126, 0, 0.06666667014360428, 0);
GUI["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["14"]["Text"] = [[Xtrey10x Hub]];
GUI["14"]["Name"] = [[Title]];
GUI["14"]["BackgroundTransparency"] = 1;
GUI["14"]["Position"] = UDim2.new(0.05160142481327057, 0, 0.009523809887468815, 0);

-- Xtrey10x.Shadow.Main.Icon
GUI["15"] = Instance.new("ImageLabel", GUI["3"]);
GUI["15"]["BorderSizePixel"] = 0;
GUI["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["15"]["Image"] = [[http://www.roblox.com/asset/?id=14374503335]];
GUI["15"]["Size"] = UDim2.new(0.04270462691783905, 0, 0.07619047909975052, 0);
GUI["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["15"]["Name"] = [[Icon]];
GUI["15"]["BackgroundTransparency"] = 1;
GUI["15"]["Position"] = UDim2.new(0.005338078364729881, 0, 0.0063492064364254475, 0);

-- Xtrey10x.Shadow.Main.Close
GUI["16"] = Instance.new("TextButton", GUI["3"]);
GUI["16"]["TextWrapped"] = true;
GUI["16"]["ZIndex"] = 0;
GUI["16"]["BorderSizePixel"] = 0;
GUI["16"]["AutoButtonColor"] = false;
GUI["16"]["TextScaled"] = true;
GUI["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
GUI["16"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
GUI["16"]["Size"] = UDim2.new(0.03380782902240753, 0, 0.06031746044754982, 0);
GUI["16"]["Name"] = [[Close]];
GUI["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["16"]["Text"] = [[X]];
GUI["16"]["Position"] = UDim2.new(0.9580000042915344, 0, 0.013000000268220901, 0);
GUI["16"]["BackgroundTransparency"] = 1;

-- Xtrey10x.Shadow.Main.Close.UIAspectRatioConstraint
GUI["17"] = Instance.new("UIAspectRatioConstraint", GUI["16"]);


-- Xtrey10x.Shadow.Main.UIAspectRatioConstraint
GUI["18"] = Instance.new("UIAspectRatioConstraint", GUI["3"]);
GUI["18"]["AspectRatio"] = 1.7841269969940186;

-- Xtrey10x.Shadow.UIListLayout
GUI["19"] = Instance.new("UIListLayout", GUI["2"]);
GUI["19"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
GUI["19"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
GUI["19"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Shadow.UIAspectRatioConstraint
GUI["1a"] = Instance.new("UIAspectRatioConstraint", GUI["2"]);
GUI["1a"]["AspectRatio"] = 1.6861110925674438;

-- Xtrey10x.Reserved
GUI["1b"] = Instance.new("Folder", GUI["1"]);
GUI["1b"]["Name"] = [[Reserved]];

-- Xtrey10x.Reserved.Tab
GUI["1c"] = Instance.new("ScrollingFrame", GUI["1b"]);
GUI["1c"]["Active"] = true;
GUI["1c"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
GUI["1c"]["BorderSizePixel"] = 0;
GUI["1c"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
GUI["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["1c"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
GUI["1c"]["BackgroundTransparency"] = 1;
GUI["1c"]["Size"] = UDim2.new(0, 387, 0, 252);
GUI["1c"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
GUI["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["1c"]["ScrollBarThickness"] = 0;
GUI["1c"]["Position"] = UDim2.new(0, 0, 0.10320284962654114, 0);
GUI["1c"]["Visible"] = false;
GUI["1c"]["Name"] = [[Tab]];

-- Xtrey10x.Reserved.Tab.UIListLayout
GUI["1d"] = Instance.new("UIListLayout", GUI["1c"]);
GUI["1d"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
GUI["1d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Reserved.SectionElements
GUI["1e"] = Instance.new("Folder", GUI["1b"]);
GUI["1e"]["Name"] = [[SectionElements]];

-- Xtrey10x.Reserved.SectionElements.Keybind
GUI["1f"] = Instance.new("Frame", GUI["1e"]);
GUI["1f"]["BorderSizePixel"] = 0;
GUI["1f"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
GUI["1f"]["Size"] = UDim2.new(0, 353, 0, 39);
GUI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["1f"]["Position"] = UDim2.new(-0.004285714123398066, 0, 0.8560744524002075, 0);
GUI["1f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["1f"]["Visible"] = false;
GUI["1f"]["Name"] = [[Keybind]];

-- Xtrey10x.Reserved.SectionElements.Keybind.Title
GUI["20"] = Instance.new("TextLabel", GUI["1f"]);
GUI["20"]["TextWrapped"] = true;
GUI["20"]["BorderSizePixel"] = 0;
GUI["20"]["TextScaled"] = true;
GUI["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["20"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["20"]["TextSize"] = 14;
GUI["20"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["20"]["Size"] = UDim2.new(0, 345, 0, 19);
GUI["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["20"]["Text"] = [[Keybind]];
GUI["20"]["Name"] = [[Title]];
GUI["20"]["BackgroundTransparency"] = 1;
GUI["20"]["Position"] = UDim2.new(0, 12, 0, 5);

-- Xtrey10x.Reserved.SectionElements.Keybind.UIGradient
GUI["21"] = Instance.new("UIGradient", GUI["1f"]);
GUI["21"]["Rotation"] = 70;
GUI["21"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Keybind.UICorner
GUI["22"] = Instance.new("UICorner", GUI["1f"]);
GUI["22"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Keybind.Description
GUI["23"] = Instance.new("TextLabel", GUI["1f"]);
GUI["23"]["BorderSizePixel"] = 0;
GUI["23"]["TextYAlignment"] = Enum.TextYAlignment.Top;
GUI["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["23"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
GUI["23"]["TextSize"] = 16;
GUI["23"]["TextColor3"] = Color3.fromRGB(214, 214, 214);
GUI["23"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["23"]["Size"] = UDim2.new(0, 260, 0, 20);
GUI["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["23"]["Text"] = [[Hello! this is a description]];
GUI["23"]["Name"] = [[Description]];
GUI["23"]["BackgroundTransparency"] = 1;
GUI["23"]["Position"] = UDim2.new(0, 13, 0, 27);

-- Xtrey10x.Reserved.SectionElements.Keybind.Description.Frame
GUI["24"] = Instance.new("Frame", GUI["23"]);
GUI["24"]["BorderSizePixel"] = 0;
GUI["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["24"]["BackgroundTransparency"] = 1;
GUI["24"]["Size"] = UDim2.new(1.0431894063949585, 0, 0.40683311223983765, 0);
GUI["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["24"]["Position"] = UDim2.new(0, 0, 0.7440709471702576, 0);

-- Xtrey10x.Reserved.SectionElements.Keybind.Trigger
GUI["25"] = Instance.new("TextButton", GUI["1f"]);
GUI["25"]["TextWrapped"] = true;
GUI["25"]["BorderSizePixel"] = 0;
GUI["25"]["AutoButtonColor"] = false;
GUI["25"]["BackgroundColor3"] = Color3.fromRGB(69, 69, 69);
GUI["25"]["TextSize"] = 21;
GUI["25"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["25"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["25"]["Size"] = UDim2.new(0, 60, 0, 25);
GUI["25"]["Name"] = [[Trigger]];
GUI["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["25"]["Text"] = [[...]];
GUI["25"]["Position"] = UDim2.new(0, 280, 0, 12);

-- Xtrey10x.Reserved.SectionElements.Keybind.Trigger.UICorner
GUI["26"] = Instance.new("UICorner", GUI["25"]);
GUI["26"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Keybind.Trigger.UIGradient
GUI["27"] = Instance.new("UIGradient", GUI["25"]);
GUI["27"]["Rotation"] = 70;
GUI["27"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Input
GUI["28"] = Instance.new("Frame", GUI["1e"]);
GUI["28"]["BorderSizePixel"] = 0;
GUI["28"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
GUI["28"]["Size"] = UDim2.new(0, 353, 0, 60);
GUI["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["28"]["Position"] = UDim2.new(-0.004285714123398066, 0, 0.23075233399868011, 0);
GUI["28"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["28"]["Visible"] = false;
GUI["28"]["Name"] = [[Input]];

-- Xtrey10x.Reserved.SectionElements.Input.Title
GUI["29"] = Instance.new("TextLabel", GUI["28"]);
GUI["29"]["TextWrapped"] = true;
GUI["29"]["BorderSizePixel"] = 0;
GUI["29"]["TextScaled"] = true;
GUI["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["29"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["29"]["TextSize"] = 14;
GUI["29"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["29"]["Size"] = UDim2.new(0, 345, 0, 19);
GUI["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["29"]["Text"] = [[Input]];
GUI["29"]["Name"] = [[Title]];
GUI["29"]["BackgroundTransparency"] = 1;
GUI["29"]["Position"] = UDim2.new(0, 12, 0, 5);

-- Xtrey10x.Reserved.SectionElements.Input.UIGradient
GUI["2a"] = Instance.new("UIGradient", GUI["28"]);
GUI["2a"]["Rotation"] = 70;
GUI["2a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Input.UICorner
GUI["2b"] = Instance.new("UICorner", GUI["28"]);
GUI["2b"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Input.Description
GUI["2c"] = Instance.new("TextLabel", GUI["28"]);
GUI["2c"]["BorderSizePixel"] = 0;
GUI["2c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
GUI["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["2c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
GUI["2c"]["TextSize"] = 16;
GUI["2c"]["TextColor3"] = Color3.fromRGB(214, 214, 214);
GUI["2c"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["2c"]["Size"] = UDim2.new(0, 260, 0, 20);
GUI["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["2c"]["Text"] = [[Hello! this is a description]];
GUI["2c"]["Name"] = [[Description]];
GUI["2c"]["BackgroundTransparency"] = 1;
GUI["2c"]["Position"] = UDim2.new(0, 13, 0, 55);

-- Xtrey10x.Reserved.SectionElements.Input.Description.Frame
GUI["2d"] = Instance.new("Frame", GUI["2c"]);
GUI["2d"]["BorderSizePixel"] = 0;
GUI["2d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["2d"]["BackgroundTransparency"] = 1;
GUI["2d"]["Size"] = UDim2.new(1.0431894063949585, 0, 0.40683311223983765, 0);
GUI["2d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["2d"]["Position"] = UDim2.new(0, 0, 0.7440709471702576, 0);

-- Xtrey10x.Reserved.SectionElements.Input.TextBox
GUI["2e"] = Instance.new("TextBox", GUI["28"]);
GUI["2e"]["BorderSizePixel"] = 0;
GUI["2e"]["TextSize"] = 21;
GUI["2e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["2e"]["TextWrapped"] = true;
GUI["2e"]["BackgroundColor3"] = Color3.fromRGB(69, 69, 69);
GUI["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["2e"]["PlaceholderText"] = [[Input here...]];
GUI["2e"]["Size"] = UDim2.new(0, 331, 0, 25);
GUI["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["2e"]["Text"] = [[]];
GUI["2e"]["Position"] = UDim2.new(0, 10, 0, 24);

-- Xtrey10x.Reserved.SectionElements.Input.TextBox.UICorner
GUI["2f"] = Instance.new("UICorner", GUI["2e"]);
GUI["2f"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Input.TextBox.UIGradient
GUI["30"] = Instance.new("UIGradient", GUI["2e"]);
GUI["30"]["Rotation"] = 70;
GUI["30"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Input.TextBox.UIPadding
GUI["31"] = Instance.new("UIPadding", GUI["2e"]);
GUI["31"]["PaddingLeft"] = UDim.new(0, 10);

-- Xtrey10x.Reserved.SectionElements.Slider
GUI["32"] = Instance.new("Frame", GUI["1e"]);
GUI["32"]["BorderSizePixel"] = 0;
GUI["32"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
GUI["32"]["Size"] = UDim2.new(0, 353, 0, 66);
GUI["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["32"]["Position"] = UDim2.new(-0.004285714123398066, 0, 0.6374566555023193, 0);
GUI["32"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["32"]["Visible"] = false;
GUI["32"]["Name"] = [[Slider]];

-- Xtrey10x.Reserved.SectionElements.Slider.Title
GUI["33"] = Instance.new("TextLabel", GUI["32"]);
GUI["33"]["TextWrapped"] = true;
GUI["33"]["BorderSizePixel"] = 0;
GUI["33"]["TextScaled"] = true;
GUI["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["33"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["33"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["33"]["TextSize"] = 14;
GUI["33"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["33"]["Size"] = UDim2.new(0, 345, 0, 19);
GUI["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["33"]["Text"] = [[Slider]];
GUI["33"]["Name"] = [[Title]];
GUI["33"]["BackgroundTransparency"] = 1;
GUI["33"]["Position"] = UDim2.new(0, 12, 0, 4);

-- Xtrey10x.Reserved.SectionElements.Slider.UIGradient
GUI["34"] = Instance.new("UIGradient", GUI["32"]);
GUI["34"]["Rotation"] = 70;
GUI["34"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Slider.UICorner
GUI["35"] = Instance.new("UICorner", GUI["32"]);
GUI["35"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Slider.Description
GUI["36"] = Instance.new("TextLabel", GUI["32"]);
GUI["36"]["BorderSizePixel"] = 0;
GUI["36"]["TextYAlignment"] = Enum.TextYAlignment.Top;
GUI["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["36"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
GUI["36"]["TextSize"] = 16;
GUI["36"]["TextColor3"] = Color3.fromRGB(214, 214, 214);
GUI["36"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["36"]["Size"] = UDim2.new(0, 260, 0, 20);
GUI["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["36"]["Text"] = [[Hello! this is a description]];
GUI["36"]["Name"] = [[Description]];
GUI["36"]["BackgroundTransparency"] = 1;
GUI["36"]["Position"] = UDim2.new(0, 13, 0, 47);

-- Xtrey10x.Reserved.SectionElements.Slider.Description.Frame
GUI["37"] = Instance.new("Frame", GUI["36"]);
GUI["37"]["BorderSizePixel"] = 0;
GUI["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["37"]["BackgroundTransparency"] = 1;
GUI["37"]["Size"] = UDim2.new(1.0431894063949585, 0, 0.40683311223983765, 0);
GUI["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["37"]["Position"] = UDim2.new(0, 0, 0.7440709471702576, 0);

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider
GUI["38"] = Instance.new("Frame", GUI["32"]);
GUI["38"]["BorderSizePixel"] = 0;
GUI["38"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
GUI["38"]["Size"] = UDim2.new(0, 330, 0, 17);
GUI["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["38"]["Position"] = UDim2.new(0, 10, 0, 23);
GUI["38"]["Name"] = [[ActualSlider]];

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider.Fill
GUI["39"] = Instance.new("Frame", GUI["38"]);
GUI["39"]["BorderSizePixel"] = 0;
GUI["39"]["BackgroundColor3"] = Color3.fromRGB(255, 63, 63);
GUI["39"]["Size"] = UDim2.new(0, 0, 1, 0);
GUI["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["39"]["Name"] = [[Fill]];

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider.Fill.UICorner
GUI["3a"] = Instance.new("UICorner", GUI["39"]);
GUI["3a"]["CornerRadius"] = UDim.new(0, 100);

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider.UICorner
GUI["3b"] = Instance.new("UICorner", GUI["38"]);
GUI["3b"]["CornerRadius"] = UDim.new(0, 100);

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider.Trigger
GUI["3c"] = Instance.new("TextButton", GUI["38"]);
GUI["3c"]["Active"] = false;
GUI["3c"]["BorderSizePixel"] = 0;
GUI["3c"]["AutoButtonColor"] = false;
GUI["3c"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
GUI["3c"]["Selectable"] = false;
GUI["3c"]["Size"] = UDim2.new(1, 0, 1, 0);
GUI["3c"]["Name"] = [[Trigger]];
GUI["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["3c"]["Text"] = [[]];
GUI["3c"]["BackgroundTransparency"] = 1;

-- Xtrey10x.Reserved.SectionElements.Slider.ActualSlider.Value
GUI["3d"] = Instance.new("TextLabel", GUI["38"]);
GUI["3d"]["BorderSizePixel"] = 0;
GUI["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["3d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["3d"]["TextSize"] = 14;
GUI["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["3d"]["Size"] = UDim2.new(0, 318, 0, 17);
GUI["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["3d"]["Text"] = [[]];
GUI["3d"]["Name"] = [[Value]];
GUI["3d"]["BackgroundTransparency"] = 1;
GUI["3d"]["Position"] = UDim2.new(0.036363635212183, 0, 0, 0);

-- Xtrey10x.Reserved.SectionElements.Toggle
GUI["3e"] = Instance.new("Frame", GUI["1e"]);
GUI["3e"]["BorderSizePixel"] = 0;
GUI["3e"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
GUI["3e"]["Size"] = UDim2.new(0, 353, 0, 46);
GUI["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["3e"]["Position"] = UDim2.new(-0.004285714123398066, 0, 0.1764705926179886, 0);
GUI["3e"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["3e"]["Visible"] = false;
GUI["3e"]["Name"] = [[Toggle]];

-- Xtrey10x.Reserved.SectionElements.Toggle.Title
GUI["3f"] = Instance.new("TextLabel", GUI["3e"]);
GUI["3f"]["TextWrapped"] = true;
GUI["3f"]["BorderSizePixel"] = 0;
GUI["3f"]["TextScaled"] = true;
GUI["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["3f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["3f"]["TextSize"] = 14;
GUI["3f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["3f"]["Size"] = UDim2.new(0, 345, 0, 19);
GUI["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["3f"]["Text"] = [[Toggle]];
GUI["3f"]["Name"] = [[Title]];
GUI["3f"]["BackgroundTransparency"] = 1;
GUI["3f"]["Position"] = UDim2.new(0, 12, 0, 6);

-- Xtrey10x.Reserved.SectionElements.Toggle.UIGradient
GUI["40"] = Instance.new("UIGradient", GUI["3e"]);
GUI["40"]["Rotation"] = 70;
GUI["40"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Toggle.UICorner
GUI["41"] = Instance.new("UICorner", GUI["3e"]);
GUI["41"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Toggle.Description
GUI["42"] = Instance.new("TextLabel", GUI["3e"]);
GUI["42"]["BorderSizePixel"] = 0;
GUI["42"]["TextYAlignment"] = Enum.TextYAlignment.Top;
GUI["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["42"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
GUI["42"]["TextSize"] = 16;
GUI["42"]["TextColor3"] = Color3.fromRGB(214, 214, 214);
GUI["42"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["42"]["Size"] = UDim2.new(0, 301, 0, 20);
GUI["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["42"]["Text"] = [[Hello! this is a description]];
GUI["42"]["Name"] = [[Description]];
GUI["42"]["BackgroundTransparency"] = 1;
GUI["42"]["Position"] = UDim2.new(0, 13, 0, 23);

-- Xtrey10x.Reserved.SectionElements.Toggle.Description.Frame
GUI["43"] = Instance.new("Frame", GUI["42"]);
GUI["43"]["BorderSizePixel"] = 0;
GUI["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["43"]["BackgroundTransparency"] = 1;
GUI["43"]["Size"] = UDim2.new(1.0431894063949585, 0, 0.40683311223983765, 0);
GUI["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["43"]["Position"] = UDim2.new(0, 0, 0.7440709471702576, 0);

-- Xtrey10x.Reserved.SectionElements.Toggle.Togglebutton
GUI["44"] = Instance.new("TextButton", GUI["3e"]);
GUI["44"]["Active"] = false;
GUI["44"]["BorderSizePixel"] = 0;
GUI["44"]["AutoButtonColor"] = false;
GUI["44"]["BackgroundColor3"] = Color3.fromRGB(45, 45, 45);
GUI["44"]["Selectable"] = false;
GUI["44"]["Size"] = UDim2.new(0, 20, 0, 20);
GUI["44"]["Name"] = [[Togglebutton]];
GUI["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["44"]["Text"] = [[]];
GUI["44"]["Position"] = UDim2.new(0.9093484282493591, 0, 0.27203169465065, 0);

-- Xtrey10x.Reserved.SectionElements.Toggle.Togglebutton.UIStroke
GUI["45"] = Instance.new("UIStroke", GUI["44"]);
GUI["45"]["Color"] = Color3.fromRGB(248, 131, 131);
GUI["45"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- Xtrey10x.Reserved.SectionElements.Toggle.Togglebutton.Image
GUI["46"] = Instance.new("ImageLabel", GUI["44"]);
GUI["46"]["BorderSizePixel"] = 0;
GUI["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["46"]["Image"] = [[http://www.roblox.com/asset/?id=6972569034]];
GUI["46"]["Size"] = UDim2.new(1, 0, 1, 0);
GUI["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["46"]["Name"] = [[Image]];
GUI["46"]["BackgroundTransparency"] = 1;

-- Xtrey10x.Reserved.SectionElements.Button
GUI["47"] = Instance.new("TextButton", GUI["1e"]);
GUI["47"]["BorderSizePixel"] = 0;
GUI["47"]["AutoButtonColor"] = false;
GUI["47"]["BackgroundColor3"] = Color3.fromRGB(255, 95, 95);
GUI["47"]["TextSize"] = 14;
GUI["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
GUI["47"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
GUI["47"]["Visible"] = false;
GUI["47"]["Size"] = UDim2.new(0, 352, 0, 30);
GUI["47"]["Name"] = [[Button]];
GUI["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["47"]["Text"] = [[]];
GUI["47"]["Position"] = UDim2.new(-0.0057142856530845165, 0, -0.017479201778769493, 0);

-- Xtrey10x.Reserved.SectionElements.Button.UICorner
GUI["48"] = Instance.new("UICorner", GUI["47"]);
GUI["48"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Button.UIGradient
GUI["49"] = Instance.new("UIGradient", GUI["47"]);
GUI["49"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Button.Title
GUI["4a"] = Instance.new("TextLabel", GUI["47"]);
GUI["4a"]["TextWrapped"] = true;
GUI["4a"]["BorderSizePixel"] = 0;
GUI["4a"]["TextScaled"] = true;
GUI["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["4a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["4a"]["TextSize"] = 14;
GUI["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["4a"]["Size"] = UDim2.new(0, 344, 0, 19);
GUI["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["4a"]["Text"] = [[Button]];
GUI["4a"]["Name"] = [[Title]];
GUI["4a"]["BackgroundTransparency"] = 1;
GUI["4a"]["Position"] = UDim2.new(0.02284076064825058, 0, 0.18299967050552368, 0);

-- Xtrey10x.Reserved.SectionElements.Dropdown
GUI["4b"] = Instance.new("TextButton", GUI["1e"]);
GUI["4b"]["BorderSizePixel"] = 0;
GUI["4b"]["AutoButtonColor"] = false;
GUI["4b"]["BackgroundColor3"] = Color3.fromRGB(94, 94, 94);
GUI["4b"]["TextSize"] = 14;
GUI["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
GUI["4b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
GUI["4b"]["Visible"] = false;
GUI["4b"]["Size"] = UDim2.new(0, 352, 0, 30);
GUI["4b"]["Name"] = [[Dropdown]];
GUI["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["4b"]["Text"] = [[]];
GUI["4b"]["AutomaticSize"] = Enum.AutomaticSize.Y;

-- Xtrey10x.Reserved.SectionElements.Dropdown.UICorner
GUI["4c"] = Instance.new("UICorner", GUI["4b"]);
GUI["4c"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Dropdown.UIGradient
GUI["4d"] = Instance.new("UIGradient", GUI["4b"]);
GUI["4d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Dropdown.Title
GUI["4e"] = Instance.new("TextLabel", GUI["4b"]);
GUI["4e"]["TextWrapped"] = true;
GUI["4e"]["BorderSizePixel"] = 0;
GUI["4e"]["TextScaled"] = true;
GUI["4e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["4e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["4e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["4e"]["TextSize"] = 14;
GUI["4e"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
GUI["4e"]["Size"] = UDim2.new(0, 344, 0, 19);
GUI["4e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["4e"]["Text"] = "Dropdown [none]";
GUI["4e"]["Name"] = [[Title]];
GUI["4e"]["BackgroundTransparency"] = 1;
GUI["4e"]["Position"] = UDim2.new(0, 8, 0, 5);

-- Xtrey10x.Reserved.SectionElements.Dropdown.ImageLabel
GUI["4f"] = Instance.new("ImageLabel", GUI["4b"]);
GUI["4f"]["BorderSizePixel"] = 0;
GUI["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["4f"]["ImageColor3"] = Color3.fromRGB(189, 189, 189);
GUI["4f"]["Image"] = [[http://www.roblox.com/asset/?id=14350776859]];
GUI["4f"]["Size"] = UDim2.new(0, 24, 0, 19);
GUI["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["4f"]["BackgroundTransparency"] = 1;
GUI["4f"]["Position"] = UDim2.new(0, 327, 0, 5);

-- Xtrey10x.Reserved.SectionElements.Dropdown.ImageLabel.UIAspectRatioConstraint
GUI["50"] = Instance.new("UIAspectRatioConstraint", GUI["4f"]);


-- Xtrey10x.Reserved.SectionElements.Dropdown.ScrollingFrame
GUI["51"] = Instance.new("ScrollingFrame", GUI["4b"]);
GUI["51"]["Active"] = true;
GUI["51"]["BorderSizePixel"] = 0;
GUI["51"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
GUI["51"]["BackgroundColor3"] = Color3.fromRGB(94, 94, 94);
GUI["51"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
GUI["51"]["Size"] = UDim2.new(0, 350, 0, 0);
GUI["51"]["ScrollBarImageColor3"] = Color3.fromRGB(163, 163, 163);
GUI["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["51"]["Position"] = UDim2.new(0, 1, 0, 30);

-- Xtrey10x.Reserved.SectionElements.Dropdown.ScrollingFrame.Lists
GUI["52"] = Instance.new("Frame", GUI["51"]);
GUI["52"]["BorderSizePixel"] = 0;
GUI["52"]["BackgroundColor3"] = Color3.fromRGB(94, 94, 94);
GUI["52"]["Size"] = UDim2.new(1, 0, 1, 0);
GUI["52"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["52"]["Name"] = [[Lists]];

-- Xtrey10x.Reserved.SectionElements.Dropdown.ScrollingFrame.Lists.UIGradient
GUI["53"] = Instance.new("UIGradient", GUI["52"]);
GUI["53"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Dropdown.ScrollingFrame.Lists.UIListLayout
GUI["54"] = Instance.new("UIListLayout", GUI["52"]);
GUI["54"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
GUI["54"]["Padding"] = UDim.new(0, 1);
GUI["54"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Reserved.SectionElements.Section
GUI["55"] = Instance.new("Frame", GUI["1e"]);
GUI["55"]["BorderSizePixel"] = 0;
GUI["55"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
GUI["55"]["Size"] = UDim2.new(0, 371, 0, -6);
GUI["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["55"]["Position"] = UDim2.new(0.02067183516919613, 0, -1.2110150748867454e-07, 0);
GUI["55"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["55"]["Visible"] = false;
GUI["55"]["Name"] = [[Section]];

-- Xtrey10x.Reserved.SectionElements.Section.UIGradient
GUI["56"] = Instance.new("UIGradient", GUI["55"]);
GUI["56"]["Rotation"] = 70;
GUI["56"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.Section.UICorner
GUI["57"] = Instance.new("UICorner", GUI["55"]);
GUI["57"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.Section.Title
GUI["58"] = Instance.new("TextLabel", GUI["55"]);
GUI["58"]["TextWrapped"] = true;
GUI["58"]["BorderSizePixel"] = 0;
GUI["58"]["TextScaled"] = true;
GUI["58"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["58"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["58"]["TextSize"] = 14;
GUI["58"]["TextColor3"] = Color3.fromRGB(255, 48, 48);
GUI["58"]["Size"] = UDim2.new(0, 369, 0, 19);
GUI["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["58"]["Name"] = [[Title]];
GUI["58"]["BackgroundTransparency"] = 1;
GUI["58"]["Position"] = UDim2.new(0, 1, 0, 4);

-- Xtrey10x.Reserved.SectionElements.Section.Border
GUI["59"] = Instance.new("Frame", GUI["55"]);
GUI["59"]["BorderSizePixel"] = 0;
GUI["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["59"]["Size"] = UDim2.new(0, 350, 0, 3);
GUI["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["59"]["Position"] = UDim2.new(0, 9, 0, 24);
GUI["59"]["Name"] = [[Border]];

-- Xtrey10x.Reserved.SectionElements.Section.Border.UIGradient
GUI["5a"] = Instance.new("UIGradient", GUI["59"]);
GUI["5a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(40, 40, 40)),ColorSequenceKeypoint.new(0.489, Color3.fromRGB(255, 95, 95)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(40, 40, 40))};

-- Xtrey10x.Reserved.SectionElements.Section.Items
GUI["5b"] = Instance.new("Frame", GUI["55"]);
GUI["5b"]["BorderSizePixel"] = 0;
GUI["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["5b"]["BackgroundTransparency"] = 1;
GUI["5b"]["Size"] = UDim2.new(0, 350, 0, -4);
GUI["5b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["5b"]["Position"] = UDim2.new(0, 9, 0, 37);
GUI["5b"]["AutomaticSize"] = Enum.AutomaticSize.Y;
GUI["5b"]["Name"] = [[Items]];

-- Xtrey10x.Reserved.SectionElements.Section.Items.UIListLayout
GUI["5c"] = Instance.new("UIListLayout", GUI["5b"]);
GUI["5c"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
GUI["5c"]["Padding"] = UDim.new(0, 5);
GUI["5c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Reserved.SectionElements.DropdownButton
GUI["5d"] = Instance.new("TextButton", GUI["1e"]);
GUI["5d"]["BorderSizePixel"] = 0;
GUI["5d"]["AutoButtonColor"] = false;
GUI["5d"]["BackgroundColor3"] = Color3.fromRGB(58, 58, 58);
GUI["5d"]["TextSize"] = 14;
GUI["5d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
GUI["5d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
GUI["5d"]["Visible"] = false;
GUI["5d"]["Size"] = UDim2.new(0, 351, 0, 30);
GUI["5d"]["Name"] = [[DropdownButton]];
GUI["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["5d"]["Text"] = [[]];
GUI["5d"]["Position"] = UDim2.new(-0.0028571428265422583, 0, 0, 0);

-- Xtrey10x.Reserved.SectionElements.DropdownButton.UICorner
GUI["5e"] = Instance.new("UICorner", GUI["5d"]);
GUI["5e"]["CornerRadius"] = UDim.new(0, 4);

-- Xtrey10x.Reserved.SectionElements.DropdownButton.UIGradient
GUI["5f"] = Instance.new("UIGradient", GUI["5d"]);
GUI["5f"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(154, 154, 154))};

-- Xtrey10x.Reserved.SectionElements.DropdownButton.Title
GUI["60"] = Instance.new("TextLabel", GUI["5d"]);
GUI["60"]["TextWrapped"] = true;
GUI["60"]["BorderSizePixel"] = 0;
GUI["60"]["TextScaled"] = true;
GUI["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["60"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["60"]["TextSize"] = 14;
GUI["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
GUI["60"]["Size"] = UDim2.new(0, 344, 0, 19);
GUI["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["60"]["Text"] = [[Button]];
GUI["60"]["Name"] = [[Title]];
GUI["60"]["BackgroundTransparency"] = 1;
GUI["60"]["Position"] = UDim2.new(0.02284076064825058, 0, 0.18299967050552368, 0);

-- Xtrey10x.Reserved.Sidetab
GUI["61"] = Instance.new("Folder", GUI["1b"]);
GUI["61"]["Name"] = [[Sidetab]];

-- Xtrey10x.Reserved.Sidetab.Button
GUI["62"] = Instance.new("TextButton", GUI["61"]);
GUI["62"]["Active"] = false;
GUI["62"]["BorderSizePixel"] = 0;
GUI["62"]["AutoButtonColor"] = false;
GUI["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["62"]["Selectable"] = false;
GUI["62"]["Visible"] = false;
GUI["62"]["Size"] = UDim2.new(0, 128, 0, 25);
GUI["62"]["Name"] = [[Button]];
GUI["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["62"]["Text"] = [[]];
GUI["62"]["Position"] = UDim2.new(0.07324840873479843, 0, 0.10218977928161621, 0);
GUI["62"]["BackgroundTransparency"] = 1;

-- Xtrey10x.Reserved.Sidetab.Button.UIListLayout
GUI["63"] = Instance.new("UIListLayout", GUI["62"]);
GUI["63"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
GUI["63"]["FillDirection"] = Enum.FillDirection.Horizontal;
GUI["63"]["Padding"] = UDim.new(0, 5);
GUI["63"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- Xtrey10x.Reserved.Sidetab.Button.Indicator
GUI["64"] = Instance.new("Frame", GUI["62"]);
GUI["64"]["BorderSizePixel"] = 0;
GUI["64"]["BackgroundColor3"] = Color3.fromRGB(237, 0, 0);
GUI["64"]["Size"] = UDim2.new(0, 5, 0, 0);
GUI["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["64"]["Position"] = UDim2.new(0, 0, 0.10000000149011612, 0);
GUI["64"]["Name"] = [[Indicator]];

-- Xtrey10x.Reserved.Sidetab.Button.Indicator.UICorner
GUI["65"] = Instance.new("UICorner", GUI["64"]);
GUI["65"]["CornerRadius"] = UDim.new(10, 100);

-- Xtrey10x.Reserved.Sidetab.Button.Title
GUI["66"] = Instance.new("TextLabel", GUI["62"]);
GUI["66"]["TextWrapped"] = true;
GUI["66"]["BorderSizePixel"] = 0;
GUI["66"]["TextScaled"] = true;
GUI["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["66"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["66"]["TextSize"] = 14;
GUI["66"]["TextColor3"] = Color3.fromRGB(222, 214, 214);
GUI["66"]["Size"] = UDim2.new(0, 129, 0, 17);
GUI["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["66"]["Text"] = [[Tab 2]];
GUI["66"]["Name"] = [[Title]];
GUI["66"]["BackgroundTransparency"] = 1;
GUI["66"]["Position"] = UDim2.new(0.0390625, 0, 0.1599999964237213, 0);

-- Xtrey10x.Reserved.Sidetab.Label
GUI["67"] = Instance.new("Frame", GUI["61"]);
GUI["67"]["BorderSizePixel"] = 0;
GUI["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["67"]["BackgroundTransparency"] = 1;
GUI["67"]["Size"] = UDim2.new(0, 152, 0, 25);
GUI["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["67"]["Position"] = UDim2.new(0.01592356711626053, 0, 0, 0);
GUI["67"]["Visible"] = false;
GUI["67"]["Name"] = [[Label]];

-- Xtrey10x.Reserved.Sidetab.Label.Title
GUI["68"] = Instance.new("TextLabel", GUI["67"]);
GUI["68"]["TextWrapped"] = true;
GUI["68"]["BorderSizePixel"] = 0;
GUI["68"]["TextScaled"] = true;
GUI["68"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["68"]["TextXAlignment"] = Enum.TextXAlignment.Left;
GUI["68"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
GUI["68"]["TextSize"] = 14;
GUI["68"]["TextColor3"] = Color3.fromRGB(222, 214, 214);
GUI["68"]["Size"] = UDim2.new(0, 139, 0, 19);
GUI["68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["68"]["Name"] = [[Title]];
GUI["68"]["BackgroundTransparency"] = 1;
GUI["68"]["Position"] = UDim2.new(0.04794525355100632, 0, 0, 0);

-- Xtrey10x.Library
GUI["69"] = Instance.new("ModuleScript", GUI["1"]);
GUI["69"]["Name"] = [[Library]];

-- Xtrey10x.FloatingIcon
GUI["6a"] = Instance.new("ImageButton", GUI["1"]);
GUI["6a"]["BorderSizePixel"] = 0;
GUI["6a"]["ScaleType"] = Enum.ScaleType.Fit;
GUI["6a"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
GUI["6a"]["Size"] = UDim2.new(0.07031828165054321, 0, 0.09850543737411499, 0);
GUI["6a"]["Name"] = [[FloatingIcon]];
GUI["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["6a"]["Visible"] = false;
GUI["6a"]["Position"] = UDim2.new(0.12305699288845062, 0, 0.1171875, 0);

-- Xtrey10x.FloatingIcon.UIAspectRatioConstraint
GUI["6b"] = Instance.new("UIAspectRatioConstraint", GUI["6a"]);
GUI["6b"]["AspectRatio"] = 1.3103448152542114;

-- Xtrey10x.FloatingIcon.UIStroke
GUI["6c"] = Instance.new("UIStroke", GUI["6a"]);
GUI["6c"]["Color"] = Color3.fromRGB(255, 0, 0);

-- Xtrey10x.FloatingIcon.UIGradient
GUI["6d"] = Instance.new("UIGradient", GUI["6a"]);
GUI["6d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(142, 142, 142))};

-- Xtrey10x.FloatingIcon.UICorner
GUI["6e"] = Instance.new("UICorner", GUI["6a"]);
GUI["6e"]["CornerRadius"] = UDim.new(0, 10);

-- Xtrey10x.FloatingIcon.ImageLabel
GUI["6f"] = Instance.new("ImageLabel", GUI["6a"]);
GUI["6f"]["BorderSizePixel"] = 0;
GUI["6f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
GUI["6f"]["Image"] = [[http://www.roblox.com/asset/?id=14374503335]];
GUI["6f"]["Size"] = UDim2.new(0.7631579637527466, 0, 0.9482758641242981, 0);
GUI["6f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
GUI["6f"]["BackgroundTransparency"] = 1;
GUI["6f"]["Position"] = UDim2.new(0.1315789520740509, 0, 0.017241379246115685, 0);

-- Xtrey10x.FloatingIcon.ImageLabel.UIAspectRatioConstraint
GUI["70"] = Instance.new("UIAspectRatioConstraint", GUI["6f"]);


-- Require GUI wrapper
local GUI_REQUIRE = require;
local GUI_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = GUI_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return GUI_REQUIRE(Module);
end

GUI_MODULES[GUI["69"]] = {
Closure = function()
    local script = GUI["69"];
local LIBRARY = {}
LIBRARY.__index = LIBRARY

-- Variables
local reserved = script.Parent.Reserved
local Main = script.Parent.Shadow.Main
local SideTab = Main.ButtonTabs.ScrollingFrame
local Tabs = Main.Tabs

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")



script.Parent.Shadow.Position = UDim2.new(0.5,0,-0.5,0)






local function EnableDrag(Frame)
	local dragToggle
	local dragSpeed = .25
	local dragInput
	local dragStart
	local dragPos

	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
	end

	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if (input.UserInputState == Enum.UserInputState.End) then
					dragToggle = false
				end
			end)
		end
	end)

	Frame.InputChanged:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			dragInput = input
		end
	end)

	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if (input == dragInput and dragToggle) then
			updateInput(input)
		end
	end)
end





repeat wait(.1) until game:IsLoaded()





-- Functions
function LIBRARY:SetProfile(name, icon)
	Main.Title.Text = name
	script.Parent.Name = name
	Main.Icon.Image = icon
	
	script.Parent.FloatingIcon.ImageLabel.Image = icon
	
	EnableDrag(Main.Parent)
	EnableDrag(script.Parent.FloatingIcon)
	
	local opening = TweenService:Create(script.Parent.Shadow, TweenInfo.new(0.4), { Position = UDim2.new(0.5,0,0.5,0)})
	opening:Play()
end

function LIBRARY:AddLabel(name)
	local tab = {}
	local newLabel = reserved.Sidetab.Label:Clone()

	
	newLabel.Name = name
	newLabel.Title.Text = name
	
	newLabel.Parent =  SideTab
	newLabel.Visible = true
	script.Parent.FloatingIcon.MouseButton1Click:Connect(function()
		Main.Visible = true
		script.Parent.Shadow.Visible= true
		local extend = TweenService:Create(Main, TweenInfo.new(0.25), {Size = UDim2.new(0, 562,0, 315)})
		extend:Play()
		
		local fadeShadow = TweenService:Create(script.Parent.Shadow, TweenInfo.new(0.25), { ImageTransparency = 0.1})
		local fadeImage = TweenService:Create(script.Parent.FloatingIcon.ImageLabel, TweenInfo.new(0.25), { ImageTransparency = 1})
		local fadeIcon = TweenService:Create(script.Parent.FloatingIcon, TweenInfo.new(0.25), { BackgroundTransparency = 1})
		
		fadeImage:Play()
		fadeShadow:Play()
		fadeIcon:Play()
		
		
		
		
		fadeIcon.Completed:Wait()
		script.Parent.FloatingIcon.Visible = false
		for i,v in pairs(tab) do
			Main.Tabs[i].Visible = v
		end
	end)
	Main.Close.MouseButton1Click:Connect(function()
		script.Parent.FloatingIcon.Visible = true
		local shirk = TweenService:Create(Main, TweenInfo.new(0.25), {Size = UDim2.new(0,0,0,0)})
		shirk:Play()
		
		local fadeShadow = TweenService:Create(script.Parent.Shadow, TweenInfo.new(0.25), { ImageTransparency = 1})
		local fadeImage = TweenService:Create(script.Parent.FloatingIcon.ImageLabel, TweenInfo.new(0.25), { ImageTransparency = 0})
		local fadeIcon = TweenService:Create(script.Parent.FloatingIcon, TweenInfo.new(0.25), { BackgroundTransparency = 0})
		
		fadeImage:Play()
		fadeShadow:Play()
		fadeIcon:Play()
		
		
		for i,v in pairs(Main.Tabs:GetChildren()) do
			if v:IsA("ScrollingFrame") then
				if v.Visible == true then
					tab[v.Name] = v.Visible
					v.Visible = false
				end
			end
		end
		
		
		fadeIcon.Completed:Wait()
		Main.Visible = false
		script.Parent.Shadow.Visible= false
	end)
	
end

function LIBRARY:AddTab(name)
	local self = setmetatable({}, LIBRARY)
	
	local newBtnTab = reserved.Sidetab.Button:Clone()
	local newTab = reserved.Tab:Clone()
	local YSize = 0
	
	newBtnTab.Parent = SideTab
	newTab.Parent = Tabs
	
	newBtnTab.Name = name
	newTab.Name = name
	
	newBtnTab.Title.Text = name
	
	newBtnTab.Visible = true
	
	newTab:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
		YSize = 0
		for i,v in pairs(newTab:GetChildren()) do
			if not v:IsA("UIListLayout") then
				YSize += v.AbsoluteSize.Y
			end
		end
		newTab.CanvasSize = UDim2.new(0,0,0,YSize)
	end)
	
	
	
	
	function self:AddSection(name)
		local SectionElements = setmetatable({}, self)
		
		local newSection = reserved.SectionElements.Section:Clone()
		newSection.Parent = newTab
		
		newSection.Name = name
		newSection.Visible = true
		
		function SectionElements:AddButton(name, func)
			local newButton = reserved.SectionElements.Button:Clone()
			
			newButton.Name = name
			newButton.Title.Text = name
			newButton.Visible = true
			newButton.Parent = newSection.Items
			
			newButton.MouseButton1Click:Connect(function()
				func(newButton)
			end)
		end
		-- TODO
		function SectionElements:AddToggle(name, desc, state, func)
			local newToggle = reserved.SectionElements.Toggle:Clone()

			newToggle.Name = name
			newToggle.Title.Text = name
			newToggle.Visible = true
			newToggle.Parent = newSection.Items
			
			newToggle.Description.Text = desc
			
			if state == true then
				newToggle.Togglebutton.Image.ImageTransparency = 0
			elseif state == false then
				newToggle.Togglebutton.Image.ImageTransparency = 1
			end
			
			newToggle.Togglebutton.MouseButton1Click:Connect(function()
				
				if state == true then
					local fade = TweenService:Create(newToggle.Togglebutton.Image, TweenInfo.new(0.15), {ImageTransparency = 1})
					fade:Play()
				elseif state == false then
					local fade = TweenService:Create(newToggle.Togglebutton.Image, TweenInfo.new(0.15), {ImageTransparency = 0})
					fade:Play()
				end
				
				state = not state
				func(state, newToggle)
			end)
			return newBtnTab.Title
		end
		
		function SectionElements:AddInput(name, desc, func)
			local newInput = reserved.SectionElements.Input:Clone()
			
			newInput.Name = name
			newInput.Parent = newSection.Items
			newInput.Visible = true
			
			newInput.Title.Text = name
			newInput.Description.Text = desc
			
			newInput.TextBox.FocusLost:Connect(function()
				local text = newInput.TextBox.Text
				func(text, newInput)
			end)
			
		end
		
		
		function SectionElements:AddKeybind(name, desc, func)
			local newKeybind = reserved.SectionElements.Keybind:Clone()
			local event
			
			newKeybind.Name = name
			newKeybind.Parent = newSection.Items
			newKeybind.Visible = true
			
			newKeybind.Title.Text = name
			newKeybind.Description.Text = desc
			
			newKeybind.Trigger.MouseButton1Click:Connect(function()
				event = UserInputService.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.Keyboard then
						func(input, newKeybind)
						newKeybind.Trigger.Text = input.KeyCode.Name
						event:Disconnect()
					end
				end)
			end)
		end
		
		function SectionElements:AddSlider(name, desc, min, max, inc, func)
			local newSlider = reserved.SectionElements.Slider:Clone()

			newSlider.Visible = true
			newSlider.Name = name
			newSlider.Parent = newSection.Items
			newSlider.Title.Text = name
			newSlider.Description.Text = desc
			
			newSlider.ActualSlider.Value.Text = min
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local tweenServ = TweenService

			local Trigger = newSlider.ActualSlider.Trigger
			local Label = newSlider.ActualSlider.Value
			local Fill = newSlider.ActualSlider.Fill
			local Parent = newSlider.ActualSlider

			local perc
			local Percent
			local MouseDown = false
			local delayTw = 0.3

			local function Update()
				MouseDown = true
				repeat
					task.wait()
					Percent = math.clamp((Mouse.X - Parent.AbsolutePosition.X) / Parent.AbsoluteSize.X, 0, 1)
					perc = min + (Percent * (max - min))

					-- Calculate the rounded value with the specified precision
					local roundedValue = math.round(perc / inc) * inc

					-- Clamp the value to the specified range
					perc = math.clamp(roundedValue, min, max)
					
					local function fixInt(number, decimalPlaces)
						local multiplier = 10 ^ decimalPlaces
						return math.floor(number * multiplier + 0.5) / multiplier
					end

	
					
					
					local amount = tostring(inc)
					amount:gsub("%d+.","")
					amount = #amount
					perc = fixInt(perc,tonumber(amount))
					
					Label.Text = perc
					func(perc, newSlider)

					local tween = tweenServ:Create(Fill, TweenInfo.new(delayTw, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.fromScale(Percent, 1) })
					tween:Play()
				until MouseDown == false
			end

			Trigger.MouseButton1Down:Connect(Update)

			UserInputService.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					MouseDown = false
				end
			end)
		end

		function SectionElements:AddDropdown(name, list, func)
			local newDropdown = reserved.SectionElements.Dropdown:Clone()
			local opened = false
			
			newDropdown.Parent = newSection.Items
			newDropdown.Visible = true
			newDropdown.Name = name
			
			newDropdown.Title.Text = name.." [none]"
			
			newDropdown.MouseButton1Click:Connect(function()
				if not opened then
					opened = true
					local rotateOpen = TweenService:Create(newDropdown.ImageLabel, TweenInfo.new(0.35), { Rotation = 90 })
					local open = TweenService:Create(newDropdown.ScrollingFrame, TweenInfo.new(0.35), { Size = UDim2.new(0,350,0,173) })
					rotateOpen:Play()
					open:Play()
				elseif opened then
					opened = false
					local rotateClose = TweenService:Create(newDropdown.ImageLabel, TweenInfo.new(0.35), { Rotation = 0 })
					local close = TweenService:Create(newDropdown.ScrollingFrame, TweenInfo.new(0.35), { Size = UDim2.new(0,350,0,0) })
					rotateClose:Play()
					close:Play()
					
				end
			end)
			
			-- main
			for index,value in pairs(list) do
				local newDropdownButton = reserved.SectionElements.DropdownButton:Clone()

				newDropdownButton.Parent = newDropdown.ScrollingFrame.Lists
				newDropdownButton.Name = value
				
				newDropdownButton.Title.Text = value
				newDropdownButton.Visible = true
				
				newDropdownButton.MouseButton1Click:Connect(function()
					func(value, newDropdown)
					newDropdown.Title.Text = name.." ["..value.."]"
					opened = false
					local rotateClose = TweenService:Create(newDropdown.ImageLabel, TweenInfo.new(0.35), { Rotation = 0 })
					local close = TweenService:Create(newDropdown.ScrollingFrame, TweenInfo.new(0.35), { Size = UDim2.new(0,350,0,0) })
					rotateClose:Play()
					close:Play()
				end)
				
			end
			
		end
		
		return SectionElements
	end	
	
	newBtnTab.MouseButton1Click:Connect(function()
		for i,tab in pairs(Tabs:GetChildren()) do
			if tab:IsA("ScrollingFrame") then
				if tab.Name == name then
					tab.Visible = true
				elseif tab.Name ~= name then
					tab.Visible  = false
				end
			end
		end
		
		for i, tabBtn in pairs(SideTab:GetChildren()) do
			if tabBtn:IsA("TextButton") then
				if tabBtn.Name == name then
					local open = TweenService:Create(tabBtn.Indicator, TweenInfo.new(0.2), { Size = UDim2.new(0, 5, 0, 20) })
					open:Play()
				elseif tabBtn.Name ~= name then
					local close = TweenService:Create(tabBtn.Indicator, TweenInfo.new(0.2), { Size = UDim2.new(0, 5, 0, 0) })
					close:Play()
				end
			end
		end
		Tabs.SelectedTab.Text = name
	end)
	
	return self
end


-- self explanatory lol
return LIBRARY

end;
};

return require(GUI["69"]), require;
